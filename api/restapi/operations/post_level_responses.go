// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pedrocmart/maze-go/api/models"
)

// PostLevelCreatedCode is the HTTP code returned for type PostLevelCreated
const PostLevelCreatedCode int = 201

/*PostLevelCreated 201

swagger:response postLevelCreated
*/
type PostLevelCreated struct {

	/*
	  In: Body
	*/
	Payload *models.LevelResponse `json:"body,omitempty"`
}

// NewPostLevelCreated creates PostLevelCreated with default headers values
func NewPostLevelCreated() *PostLevelCreated {

	return &PostLevelCreated{}
}

// WithPayload adds the payload to the post level created response
func (o *PostLevelCreated) WithPayload(payload *models.LevelResponse) *PostLevelCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post level created response
func (o *PostLevelCreated) SetPayload(payload *models.LevelResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLevelCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLevelBadRequestCode is the HTTP code returned for type PostLevelBadRequest
const PostLevelBadRequestCode int = 400

/*PostLevelBadRequest 400

swagger:response postLevelBadRequest
*/
type PostLevelBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewPostLevelBadRequest creates PostLevelBadRequest with default headers values
func NewPostLevelBadRequest() *PostLevelBadRequest {

	return &PostLevelBadRequest{}
}

// WithPayload adds the payload to the post level bad request response
func (o *PostLevelBadRequest) WithPayload(payload *models.BaseResponse) *PostLevelBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post level bad request response
func (o *PostLevelBadRequest) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLevelBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLevelNotFoundCode is the HTTP code returned for type PostLevelNotFound
const PostLevelNotFoundCode int = 404

/*PostLevelNotFound 404

swagger:response postLevelNotFound
*/
type PostLevelNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewPostLevelNotFound creates PostLevelNotFound with default headers values
func NewPostLevelNotFound() *PostLevelNotFound {

	return &PostLevelNotFound{}
}

// WithPayload adds the payload to the post level not found response
func (o *PostLevelNotFound) WithPayload(payload *models.BaseResponse) *PostLevelNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post level not found response
func (o *PostLevelNotFound) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLevelNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLevelInternalServerErrorCode is the HTTP code returned for type PostLevelInternalServerError
const PostLevelInternalServerErrorCode int = 500

/*PostLevelInternalServerError 500

swagger:response postLevelInternalServerError
*/
type PostLevelInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewPostLevelInternalServerError creates PostLevelInternalServerError with default headers values
func NewPostLevelInternalServerError() *PostLevelInternalServerError {

	return &PostLevelInternalServerError{}
}

// WithPayload adds the payload to the post level internal server error response
func (o *PostLevelInternalServerError) WithPayload(payload *models.BaseResponse) *PostLevelInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post level internal server error response
func (o *PostLevelInternalServerError) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLevelInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
