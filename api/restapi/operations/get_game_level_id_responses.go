// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pedrocmart/maze-go/api/models"
)

// GetGameLevelIDOKCode is the HTTP code returned for type GetGameLevelIDOK
const GetGameLevelIDOKCode int = 200

/*GetGameLevelIDOK 200

swagger:response getGameLevelIdOK
*/
type GetGameLevelIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetGameLevelIDOK creates GetGameLevelIDOK with default headers values
func NewGetGameLevelIDOK() *GetGameLevelIDOK {

	return &GetGameLevelIDOK{}
}

// WithPayload adds the payload to the get game level Id o k response
func (o *GetGameLevelIDOK) WithPayload(payload *models.BaseResponse) *GetGameLevelIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game level Id o k response
func (o *GetGameLevelIDOK) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameLevelIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGameLevelIDBadRequestCode is the HTTP code returned for type GetGameLevelIDBadRequest
const GetGameLevelIDBadRequestCode int = 400

/*GetGameLevelIDBadRequest 400

swagger:response getGameLevelIdBadRequest
*/
type GetGameLevelIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetGameLevelIDBadRequest creates GetGameLevelIDBadRequest with default headers values
func NewGetGameLevelIDBadRequest() *GetGameLevelIDBadRequest {

	return &GetGameLevelIDBadRequest{}
}

// WithPayload adds the payload to the get game level Id bad request response
func (o *GetGameLevelIDBadRequest) WithPayload(payload *models.BaseResponse) *GetGameLevelIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game level Id bad request response
func (o *GetGameLevelIDBadRequest) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameLevelIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGameLevelIDNotFoundCode is the HTTP code returned for type GetGameLevelIDNotFound
const GetGameLevelIDNotFoundCode int = 404

/*GetGameLevelIDNotFound 404

swagger:response getGameLevelIdNotFound
*/
type GetGameLevelIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetGameLevelIDNotFound creates GetGameLevelIDNotFound with default headers values
func NewGetGameLevelIDNotFound() *GetGameLevelIDNotFound {

	return &GetGameLevelIDNotFound{}
}

// WithPayload adds the payload to the get game level Id not found response
func (o *GetGameLevelIDNotFound) WithPayload(payload *models.BaseResponse) *GetGameLevelIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game level Id not found response
func (o *GetGameLevelIDNotFound) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameLevelIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGameLevelIDInternalServerErrorCode is the HTTP code returned for type GetGameLevelIDInternalServerError
const GetGameLevelIDInternalServerErrorCode int = 500

/*GetGameLevelIDInternalServerError 500

swagger:response getGameLevelIdInternalServerError
*/
type GetGameLevelIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetGameLevelIDInternalServerError creates GetGameLevelIDInternalServerError with default headers values
func NewGetGameLevelIDInternalServerError() *GetGameLevelIDInternalServerError {

	return &GetGameLevelIDInternalServerError{}
}

// WithPayload adds the payload to the get game level Id internal server error response
func (o *GetGameLevelIDInternalServerError) WithPayload(payload *models.BaseResponse) *GetGameLevelIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game level Id internal server error response
func (o *GetGameLevelIDInternalServerError) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameLevelIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
